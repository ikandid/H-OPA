%REV optimization
function [minInt, minPhase] = REV_opt(Intensity_norm,Int_ratio_ideal, x0, opt, nulls)  
    %% Parameters
    c = 3e8;
    fc = 193e12;
    lambda = c/fc;
    k=2*pi/lambda;%wavenumber
    theta_0=0; %theta steering angle
    phi_0=0; %phi steering angle
    theta_90=1; %0 for 0:90/ 1 for -90:90
    ant = 0; %0 for isotropic antenna/ 1 for selected antenna
    res=1; %resolution
    pos_final = sparse_array_def();

    %% REV optimization
    %phases = (pi/180)*[-120, -60, 0, 60, 120];
    phases = (pi/180)*[-120, -60, 0, 60, 120];
    %phases = linspace(-1*pi,pi,25);
    %phases = linspace(0,2*pi,50);
    maxInt = [];
    minInt = [];
    maxPhase = [];
    minPhase = [];
    x1 = x0;

    for i = 1:length(pos_final)
        %x1 = x0;
        Intensity_ratio_cal = [];
        calibrated_phases = [];
        for j = 1:length(phases)
            %x1(i) = x0(i); %Reset phase to original value 
            %x1(i) = wrapToPi(x1(i)+phases(j)); %Add phase shift
            %calibrated_phases(end+1) = wrapToPi(x1(i)+phases(j));
            
            x1(i) = phases(j);
            calibrated_phases(end+1) = phases(j);
            

            %[Intensity_norm,Intensity_dB,Intensity_max,Intensity_ratio,u,v,theta,phi]=AF_general(A,B,C,D,pos_final,lambda,figure_on_off,theta_0,phi_0,ant,theta_90,phase_off)
            [Intensity_norm,Intensity_dB,Intensity_max,Intensity_ratio,u,v,theta,phi,SLL]=AF_general(1,1,1,length(pos_final),pos_final,lambda,0,theta_0,phi_0,ant,1,x1);

            %Int_sum_REV = Intensity_sum;
            %Intensity_ratio(end+1) = Int_sum_REV/Int_sum;
            Intensity_ratio_cal(end+1) = Intensity_ratio;
        end


        y = Intensity_ratio_cal;
        x = calibrated_phases;
        
        yu = max(Intensity_ratio_cal);
        yl = min(Intensity_ratio_cal);
        yr = (yu-yl);                               % Range of y
        yz = y-yu+(yr/2);
        zx = x(yz .* circshift(yz,[0 1]) <= 0);     % Find zero-crossings
        per = 2*mean(diff(zx));                     % Estimate period
        ym = mean(y);                               % Estimate offset
        
        fit = @(b,x)  b(1).*(sin(2*pi*x./b(2) + 2*pi/b(3))) + b(4);    % Function to fit
        fcn = @(b) sum((fit(b,x) - y).^2);                              % Least-Squares cost function
        s = fminsearch(fcn, [yr;  per;  -1;  ym]);                     % Minimise Least-Squares
        xp = linspace(-1*pi,1*pi);
        %xp = linspace(min(x),max(x));
        
        %maxInt(end+1) = max(fit(s,xp)); %Maximum intensity
        %maxIndex = find(fit(s,xp) == maxInt(i));
        %maxPhase(end+1) = xp(maxIndex); %Maximum phase shift

        minInt(end+1) = min(fit(s,xp)); %Minimum intensity ratio
        minIndex = find(fit(s,xp) == minInt(i));
        minPhase(end+1) = xp(minIndex); %Minimum phase shift

        %update channel
        x1(i) = minPhase(i);

        figure
        scatter(calibrated_phases',Intensity_ratio_cal')
        hold on
        %plot(x,y,'b',  xp,fit(s,xp), 'r') %If you want to see the original curve
        plot(xp,fit(s,xp), 'r') 
        plot(minPhase(i),minInt(i),'b*')
        hold off
        xlim([-1*pi, 1*pi]);
        %ylim([0, 1]);
        %xlim([0, 2*pi]);
        xlabel('Phase shift (rad)')
        ylabel('Intensity ratio')
        title(['Channel ',num2str(i)])

       
    end
    
end